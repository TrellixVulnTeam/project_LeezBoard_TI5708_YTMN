/*use modules*/
var Task = xdc.useModule ("ti.sysbios.knl.Task");
var BIOS      = xdc.useModule ("ti.sysbios.BIOS");
var Startup   = xdc.useModule ("xdc.runtime.Startup");
var System    = xdc.useModule ("xdc.runtime.System");
var Log       = xdc.useModule ("xdc.runtime.Log");
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Cache = xdc.useModule('ti.sysbios.hal.Cache');
var Error = xdc.useModule('xdc.runtime.Error');

emihostSupport = xdc.useModule('ti.sysbios.rts.gnu.SemiHostSupport');
var Program     = xdc.useModule("xdc.cfg.Program");

/* Heap used when creating semaphore's, TSK's or malloc() ... */
Program.heap            = 0x1000;

/* ISR/SWI stack        */
Program.stack           = 0x4000;

Program.sectMap[".cio"] = new Program.SectionSpec();
Program.sectMap[".cio"].loadSegment = "EXT_RAM";

xdc.loadPackage('ti.sdo.edma3.drv.sample');

/* MMU/Cache related configurations                                           */
var Cache  = xdc.useModule('ti.sysbios.family.arm.a9.Cache');
var Mmu = xdc.useModule('ti.sysbios.family.arm.a8.Mmu');

/* Enable the cache                                                           */
Cache.enableCache = false;

/* Enable the MMU (Required for L1 data caching)                              */
Mmu.enableMMU = true;

/* descriptor attribute structure                                             */
var attrs =
{
    type       : Mmu.FirstLevelDesc_SECTION,  // SECTION descriptor
    bufferable : true,                        // bufferable
    cacheable  : true,                        // cacheable
    imp        : 1,                           // implementation defined
    domain     : 0,                           // domain between 0-15
    accPerm    : 3,                           // read/write permission
};

/* configure the L3 - peripheral memory range                                 */
for (var i= 0x48000000; i < 0x48FFFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}

/* configure the L4 - peripheral memory range                                 */
for (var i= 0x4A000000; i < 0x4AFFFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}

/* configure the EDMA - TPTC0 memory range                                     */
for (var i= 0x49800000; i < 0x498FFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}

/* configure the EDMA - TPTC1 memory range                                     */
for (var i= 0x49900000; i < 0x499FFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}

/* configure the EDMA - TPTC2 memory range                                     */
for (var i= 0x49A00000; i < 0x49AFFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}

/* configure the EDMA - TPCC memory range                                     */
for (var i= 0x49000000; i < 0x490FFFFF; i = i + 0x100000)
{
    attrs.bufferable = false;
    attrs.cacheable = false;
    Mmu.setFirstLevelDescMeta(i, i, attrs);
}
