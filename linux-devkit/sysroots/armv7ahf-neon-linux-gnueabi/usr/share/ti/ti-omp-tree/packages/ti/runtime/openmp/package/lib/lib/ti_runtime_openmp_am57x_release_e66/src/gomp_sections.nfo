TMS320C6x C/C++ Optimizer               v8.2.2
Build Number 1RK5R-2LI-VATAQ-TAR-C08D
Making tomp_semAcquire a function synonym of AcquireSpinLock
Making tomp_semRelease a function synonym of ReleaseSpinLock
Making GOMP_sections_end a function synonym of gomp_work_share_end
Making GOMP_sections_end_nowait a function synonym of gomp_work_share_end_nowait

static unsigned char AcquireSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern void GOMP_parallel_sections_start() is called from 0 sites in this file.
    It appears to be inlineable (size = 15 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_start_team() (1 times)
	gomp_sections_init() (1 times)
	tomp_initialize_team() (1 times)

extern void GOMP_sections_end() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	gomp_work_share_end() (1 times)

extern void GOMP_sections_end_nowait() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	gomp_work_share_end_nowait() (1 times)

extern unsigned GOMP_sections_next() is called from 0 sites in this file.
    It appears to be inlineable (size = 27 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_mutex_unlock() (1 times)
	gomp_iter_dynamic_next_locked() (1 times)
	tomp_mutex_lock() (1 times)

extern unsigned GOMP_sections_start() is called from 0 sites in this file.
    It appears to be inlineable (size = 40 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_mutex_unlock() (1 times)
	gomp_iter_dynamic_next_locked() (1 times)
	tomp_mutex_lock() (1 times)
	gomp_work_share_init_done() (1 times)
	gomp_sections_init() (1 times)
	gomp_work_share_start() (1 times)

static void ReleaseSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void gomp_sections_init() is called from 2 sites in this file.
    It appears to be inlineable (size = 16 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_mfence() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_mutex_lock() is called from 2 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semAcquire() (2 times)

static void tomp_mutex_unlock() is called from 2 sites in this file.
    It appears to be inlineable (size = 5 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semRelease() (1 times)
	tomp_mfence() (1 times)

static unsigned char tomp_semAcquire() is called from 2 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	AcquireSpinLock() (1 times)

static void tomp_semRelease() is called from 1 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	ReleaseSpinLock() (1 times)


These functions may be recursive:
	GOMP_parallel_sections_start()
	GOMP_sections_end()
	GOMP_sections_end_nowait()
	GOMP_sections_next()
	GOMP_sections_start()

Function tomp_mutex_unlock() will be specialized on these parameters:
	[1] lock == (*(*tomp_thread.ts).work_share).lock;

Function tomp_mutex_lock() will be specialized on these parameters:
	[1] lock == (*(*tomp_thread.ts).work_share).lock;
Inlineable function will be suppressed: tomp_semRelease()
Inlineable function will be suppressed: tomp_semAcquire()
Inlineable function will be suppressed: tomp_mutex_unlock()
Inlineable function will be suppressed: tomp_mutex_lock()
Inlineable function will be suppressed: tomp_mfence()
Inlineable function will be suppressed: gomp_sections_init()

These external functions are called but not defined here:
	gomp_work_share_start()
	gomp_work_share_init_done()
	gomp_iter_dynamic_next_locked()
	gomp_work_share_end_nowait()
	gomp_work_share_end()
	tomp_initialize_team()
	tomp_start_team()


There are -1 memory accesses with 0 dependences.


There are -1 memory accesses with 0 dependences.


There are 14 memory accesses with 30 dependences.


There are -1 memory accesses with 0 dependences.


There are -1 memory accesses with 0 dependences.


There are -1 memory accesses with 0 dependences.


There are 5 memory accesses with 10 dependences.


== END OF INFO OUTPUT==
