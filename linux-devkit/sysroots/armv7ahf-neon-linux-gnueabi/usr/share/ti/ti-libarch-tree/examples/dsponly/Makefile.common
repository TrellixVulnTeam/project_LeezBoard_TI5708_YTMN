# Makefile to build OpenMP applications


default: all

include Makefile.libomp


#
# Compiler option configuration
#
LNK_CMD   = $(CFGDIR)/linker.cmd
OPT_CMD   = $(CFGDIR)/compiler.opt
CL_OPTS   = -@ $(OPT_CMD) -mv6600 --omp -I $(OMP_DIR)/packages/ti/runtime/openmp
CL_OPTS  += -I$(FC_DIR)/packages -I$(XDAIS_DIR)/packages -I$(EDMA3_DIR)/packages -I$(LIBARCH_DIR)/packages
LNK_OPTS  = -x -c --priority -w
CL        = $(CGTROOT)/bin/cl6x
RTS_LIB   = $(CGTROOT)/lib/libc.a
LIBARCH_LIB = $(LIBARCH_DIR)/packages/ti/libarch/lib/libarch.ae66

ifeq ($(BUILD_TYPE),debug)
    CL_OPTS += -g --optimize_with_debug=on
else
    CL_OPTS += -o3
endif

ifneq ($(MAKECMDGOALS),clean)
ifeq ($(TARGET),SOC_AM572x)
CL_OPTS += -DTI_AM572 -DSOC_AM572x
else ifeq ($(TARGET),SOC_K2H)
CL_OPTS += -DTI_C6636 -DSOC_K2H
else ifeq ($(TARGET),SOC_C6678)
CL_OPTS += -DTI_C6678 -DSOC_C6678
else
$(error must specify one of: \
            TARGET=SOC_K2H \
            TARGET=SOC_C6678 \
            TARGET=SOC_AM572X
endif
endif

CL_OPTS += -DLIB_RTOS

all: $(outfile)

$(outfile): $(testfiles) libomp_config
	echo compiling $<
	$(CL) $(CL_OPTS) $< $(testfiles) -z $(LNK_OPTS) -o $@ -m $*.map $(LNK_CMD) ./linker_fc.cmd $(RTS_LIB) $(LIBARCH_LIB)

clean: libomp_clean
	@rm -rf *.map *.out *.obj *.mak 

#
# Cleans libomp artifacts
#
realclean: libomp_clean
	@rm -rf *.map *.out *.obj *.mak 
