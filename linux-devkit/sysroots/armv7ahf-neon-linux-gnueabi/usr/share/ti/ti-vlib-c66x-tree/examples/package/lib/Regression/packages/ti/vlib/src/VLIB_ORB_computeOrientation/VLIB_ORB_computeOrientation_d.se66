;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Thu Mar 19 12:43:45 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$146)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$27)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$146)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x82)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$98)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x58)
	.dwattr $C$DW$15, DW_AT_decl_column(0x05)

$C$DW$16	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwattr $C$DW$16, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$16, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$16, DW_AT_decl_column(0x06)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$27)
	.dwendtag $C$DW$16


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$19, DW_AT_decl_column(0x06)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$27)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$19


$C$DW$26	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwattr $C$DW$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$26, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$26, DW_AT_decl_column(0x06)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$27)
	.dwendtag $C$DW$26


$C$DW$28	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwattr $C$DW$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$28, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$28, DW_AT_decl_column(0x06)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$27)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$27)
	.dwendtag $C$DW$28


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x80)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$25)
	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x81)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)

$C$DW$35	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwattr $C$DW$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$35, DW_AT_decl_line(0x82)
	.dwattr $C$DW$35, DW_AT_decl_column(0x0a)

$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x83)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)

$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x77)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$19)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$19)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$3)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$3)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$20)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$20)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$20)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$19)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$27)
	.dwendtag $C$DW$37


$C$DW$47	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwattr $C$DW$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h")
	.dwattr $C$DW$47, DW_AT_decl_line(0xae)
	.dwattr $C$DW$47, DW_AT_decl_column(0x07)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$98)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$98)
	.dwendtag $C$DW$47


$C$DW$50	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwattr $C$DW$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h")
	.dwattr $C$DW$50, DW_AT_decl_line(0xaf)
	.dwattr $C$DW$50, DW_AT_decl_column(0x07)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$98)
	.dwendtag $C$DW$50


$C$DW$52	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwattr $C$DW$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h")
	.dwattr $C$DW$52, DW_AT_decl_line(0xb3)
	.dwattr $C$DW$52, DW_AT_decl_column(0x07)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$52


$C$DW$54	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwattr $C$DW$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h")
	.dwattr $C$DW$54, DW_AT_decl_line(0xb4)
	.dwattr $C$DW$54, DW_AT_decl_column(0x07)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$54


$C$DW$56	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeOrientation")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("VLIB_ORB_computeOrientation")
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwattr $C$DW$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\c66/VLIB_ORB_computeOrientation.h")
	.dwattr $C$DW$56, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$56, DW_AT_decl_column(0x0f)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$67)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$20)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$20)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$20)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$68)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$20)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$69)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$69)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$67)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$67)
	.dwendtag $C$DW$56


$C$DW$67	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeOrientation_cn")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("VLIB_ORB_computeOrientation_cn")
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
	.dwattr $C$DW$67, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_cn.h")
	.dwattr $C$DW$67, DW_AT_decl_line(0x23)
	.dwattr $C$DW$67, DW_AT_decl_column(0x0c)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$22)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$20)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$20)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$20)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$49)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$20)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$24)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$24)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$22)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$22)
	.dwendtag $C$DW$67


$C$DW$78	.dwtag  DW_TAG_subprogram, DW_AT_name("orb_computeOrientation_getTestParams")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("orb_computeOrientation_getTestParams")
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwattr $C$DW$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$78, DW_AT_decl_line(0x30)
	.dwattr $C$DW$78, DW_AT_decl_column(0x06)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$86)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$120)
	.dwendtag $C$DW$78

$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x60)
	.dwattr $C$DW$81, DW_AT_decl_column(0x13)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x62)
	.dwattr $C$DW$82, DW_AT_decl_column(0x13)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$196)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x63)
	.dwattr $C$DW$83, DW_AT_decl_column(0x13)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$196)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x64)
	.dwattr $C$DW$84, DW_AT_decl_column(0x13)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x75)
	.dwattr $C$DW$85, DW_AT_decl_column(0x14)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x76)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x77)
	.dwattr $C$DW$87, DW_AT_decl_column(0x14)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x78)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$188)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x79)
	.dwattr $C$DW$89, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\0395239 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\0395241 
	.sect	".text"
	.clink
	.global	VLIB_ORB_computeOrientation_d

$C$DW$90	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeOrientation_d")
	.dwattr $C$DW$90, DW_AT_low_pc(VLIB_ORB_computeOrientation_d)
	.dwattr $C$DW$90, DW_AT_high_pc(0x00)
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("VLIB_ORB_computeOrientation_d")
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$90, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$90, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$90, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$90, DW_AT_decl_line(0x26)
	.dwattr $C$DW$90, DW_AT_decl_column(0x06)
	.dwattr $C$DW$90, DW_AT_TI_max_frame_size(0x70)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 39,column 1,is_stmt,address VLIB_ORB_computeOrientation_d,isa 0

	.dwfde $C$DW$CIE, VLIB_ORB_computeOrientation_d
$C$DW$91	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_ORB_computeOrientation_d(uint8_t LevelOfFeedback)            
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_ORB_computeOrientation_d                               *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 16 Args + 36 Auto + 56 Save = 108 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_ORB_computeOrientation_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 45	-----------------------    orb_computeOrientation_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(2, "VLIB_ORB_computeOrientation");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g26;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | orb_computeOrientation_testParams_t   *prm;                            
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(64)      ; |39| 
	.dwcfi	cfa_offset, 112
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg23]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg6]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg8]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg3]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_regx 0x25]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg3]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg20]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg23]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_regx 0x27]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$C18")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$C18")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_regx 0x26]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$C19")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$C19")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg3]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C20")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C20")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg0]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C21")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C21")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg10]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$f5")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$f5")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg21]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$f6")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$f6")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_regx 0x25]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$f7")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$f7")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg9]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$f8")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$f8")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg20]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg13]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$K30")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$K30")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg4]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$U54")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$U54")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_regx 0x25]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$K93")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$K93")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$124)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg22]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg27]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$K96")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$K96")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg21]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$K107")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$K107")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$186)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg11]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$U120")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$U120")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg25]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$U151")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$U151")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg22]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$K168")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$K168")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$124)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg8]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg0]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg24]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg8]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$138)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 24]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg15]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 20]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg10]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg28]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("nfeatures")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("nfeatures")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg10]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("featuresLoc")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("featuresLoc")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_breg31 28]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("inImage")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("inImage")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_breg31 32]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("outCosAngles")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("outCosAngles")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_breg31 36]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("outSineAngles")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("outSineAngles")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 40]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("outCosAngles_cn")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("outCosAngles_cn")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_breg31 44]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("outSineAngles_cn")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("outSineAngles_cn")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 48]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 52]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("cnt")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("cnt")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg14]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$U55")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$U55")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg7]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$U55")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$U55")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg7]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$U122")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$U122")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg8]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$U122")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$U122")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg6]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_reg7]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_regx 0x35]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg22]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg26]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg22]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("orb_computeOrientation_getTestParams")
	.dwattr $C$DW$146, DW_AT_TI_call

           CALLP   .S2     orb_computeOrientation_getTestParams,B3
||         STW     .D2T1   A4,*+SP(24)       ; |39| 
||         ADDAW   .D1X    SP,5,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | orb_computeOrientation_getTestParams(&prm, &test_cases);               
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {orb_computeOrientation_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$147, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(2, "VLIB_ORB_computeOrientation");                   
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$168 = &desc[0];
;**  	-----------------------    U$13 = prm-36;
;**  	-----------------------    K$30 = 1991u;
;**  	-----------------------    U$12 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(20),A5

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  55 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B11               ; |51| 
           ZERO    .L1     A15               ; |51| 
           SUBAW   .D1     A5,9,A13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 61,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint32_t    nfeatures = prm[tpi].true_num_features;   /* Used for the s
;     | ake of this test for memory savings */                                 
;----------------------------------------------------------------------
           ADDK    .S1     36,A13            ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |51| 

   [!A0]   BNOP    .S1     $C$L19,4          ; |51| 
|| [ A0]   LDW     .D1T1   *+A13(28),A10     ; |61| 
|| [ A0]   MVK     .L1     0x4,A4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint32_t   *featuresLoc   = (uint32_t *) VLIB_memalign(4, nfeatures * s
;     | izeof(uint32_t));                                                      
;----------------------------------------------------------------------
           SHL     .S1     A10,2,A3          ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |51| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 61	-----------------------    nfeatures = (*(U$13 += 36)).true_num_features;
;** 63	-----------------------    featuresLoc = VLIB_memalign(4u, nfeatures*4u);
;** 64	-----------------------    inImage = VLIB_memalign(4u, (unsigned)((*U$13).imageWidth*(*U$13).imageHeight));
;** 66	-----------------------    C$21 = nfeatures*2u;
;** 66	-----------------------    outCosAngles = VLIB_memalign(4u, C$21);
;** 67	-----------------------    outSineAngles = VLIB_memalign(4u, C$21);
;** 69	-----------------------    outCosAngles_cn = malloc(C$21);
;** 70	-----------------------    outSineAngles_cn = malloc(C$21);
;** 72	-----------------------    scratch = VLIB_malloc(K$30);
;** 74	-----------------------    if ( !((featuresLoc != NULL)&(inImage != NULL)&(outCosAngles != NULL)&(outSineAngles != NULL)&(outCosAngles_cn != NULL)&(outSineAngles_cn != NULL)&(scratch != NULL)) ) goto g24;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 63,column 21,is_stmt,isa 0
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$148, DW_AT_TI_call
           CALL    .S1     VLIB_memalign     ; |63| 
           ADDKPC  .S2     $C$RL2,B3,3       ; |63| 
           MV      .L2X    A3,B4             ; |63| 
$C$RL2:    ; CALL OCCURS {VLIB_memalign} {0}  ; |63| 
$C$DW$L$VLIB_ORB_computeOrientation_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$5$B:
;          EXCLUSIVE CPU CYCLES: 48
           STW     .D2T1   A4,*+SP(28)       ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | uint8_t    *inImage       = (uint8_t  *) VLIB_memalign(4, prm[tpi].imag
;     | eWidth * prm[tpi].imageHeight);                                        
;----------------------------------------------------------------------
           LDHU    .D1T1   *+A13(24),A3      ; |64| 
           LDHU    .D1T1   *+A13(26),A4      ; |64| 
           NOP             4
           MPYU    .M1     A4,A3,A3          ; |64| 
           MVK     .L1     0x4,A4            ; |64| 
           NOP             1
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$149, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A3,B4             ; |64| 

$C$RL3:    ; CALL OCCURS {VLIB_memalign} {0}  ; |64| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 66,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | int16_t   *outCosAngles      = (int16_t *) VLIB_memalign(4, nfeatures *
;     |  sizeof(int16_t));                                                     
;----------------------------------------------------------------------
           ADD     .L1     A10,A10,A10       ; |66| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 64,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(32)       ; |64| 
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x04)
	.dwattr $C$DW$150, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$150, DW_AT_TI_call

           MVK     .L1     0x4,A4            ; |66| 
||         CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A10,B4            ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 66,column 20,is_stmt,isa 0
$C$RL4:    ; CALL OCCURS {VLIB_memalign} {0}  ; |66| 
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$151, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A10,B4            ; |67| 
||         STW     .D2T1   A4,*+SP(36)       ; |66| 
||         MVK     .L1     0x4,A4            ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 67,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | int16_t   *outSineAngles     = (int16_t *) VLIB_memalign(4, nfeatures *
;     |  sizeof(int16_t));                                                     
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_memalign} {0}  ; |67| 
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("malloc")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(40)       ; |67| 
||         MV      .L1     A10,A4            ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 69,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | int16_t   *outCosAngles_cn   = (int16_t *) malloc(nfeatures * sizeof(in
;     | t16_t));                                                               
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {malloc} {0}        ; |69| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("malloc")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(44)       ; |69| 
||         MV      .L1     A10,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 70,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | int16_t   *outSineAngles_cn  = (int16_t *) malloc(nfeatures * sizeof(in
;     | t16_t));                                                               
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {malloc} {0}        ; |70| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(48)       ; |70| 
||         MVK     .S1     0x7c7,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 72,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  72 | uint8_t   *scratch           = (uint8_t *) VLIB_malloc(1991);          
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {VLIB_malloc} {0}   ; |72| 
$C$DW$L$VLIB_ORB_computeOrientation_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$6$B:
;          EXCLUSIVE CPU CYCLES: 21

           LDW     .D2T1   *+SP(36),A2       ; |74| 
||         ZERO    .L2     B4                ; |74| 
||         ZERO    .S2     B6                ; |74| 
||         ZERO    .L1     A3                ; |74| 

           LDW     .D2T1   *+SP(28),A0       ; |74| 
||         ZERO    .L2     B5                ; |74| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 74,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  74 | if( featuresLoc && inImage && outCosAngles && outSineAngles && outCosAn
;     | gles_cn && outSineAngles_cn && scratch) {                              
;  76 |     int32_t    fail;                                                   
;  77 |     int32_t    i, cnt;                                                 
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(32),B0       ; |74| 
           LDW     .D2T2   *+SP(44),B2       ; |74| 
           LDW     .D2T1   *+SP(40),A1       ; |74| 

           STW     .D2T1   A4,*+SP(52)       ; |72| 
|| [ A2]   MVK     .L2     0x1,B4            ; |74| 
||         ZERO    .L1     A4                ; |74| 

           LDW     .D2T1   *+SP(48),A2       ; |74| 
|| [ A0]   MVK     .L2     0x1,B6            ; |74| 

           LDW     .D2T2   *+SP(52),B1       ; |74| 
|| [ B0]   MVK     .L2     0x1,B5            ; |74| 

           AND     .L2     B5,B6,B6          ; |74| 
||         ZERO    .S2     B5                ; |74| 
|| [ B2]   MVK     .L1     0x1,A4            ; |74| 

   [ A1]   MVK     .L2     0x1,B5            ; |74| 
||         AND     .S2     B4,B6,B4          ; |74| 

           AND     .L2     B5,B4,B5          ; |74| 
||         ZERO    .S2     B4                ; |74| 

   [ A2]   MVK     .L2     0x1,B4            ; |74| 
||         AND     .S2X    A4,B5,B5          ; |74| 

   [ B1]   MVK     .L1     0x1,A3            ; |74| 
           AND     .L2     B4,B5,B4          ; |74| 
           AND     .L2X    A3,B4,B0          ; |74| 

   [!B0]   BNOP    .S1     $C$L17,3          ; |74| 
|| [ B0]   LDW     .D1T1   *+A13(28),A0      ; |80| 
|| [ B0]   LDW     .D2T2   *+SP(20),B6       ; |80| 
|| [!B0]   MVK     .L1     0x1,A0            ; nullify predicate
|| [ B0]   MVK     .S2     0x80,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 80,column 18,is_stmt,isa 0
;----------------------------------------------------------------------
;  80 | for( i=0, cnt=0; i < prm[tpi].true_num_features; i++ ) {               
;----------------------------------------------------------------------
   [ B0]   ZERO    .L1     A14               ; |80| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 80,column 30,is_stmt,isa 0
;----------------------------------------------------------------------
;  81 | int    pointX = prm[tpi].staticInFeatures[2 * i];                      
;  82 | int    pointY = prm[tpi].staticInFeatures[2 * i + 1];                  
;----------------------------------------------------------------------
   [!A0]   B       .S1     $C$L5             ; |80| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 74,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |74| 
$C$DW$L$VLIB_ORB_computeOrientation_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$7$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 80	-----------------------    v$1 = prm;
;**  	-----------------------    K$96 = 128;
;** 80	-----------------------    cnt = 0;
;** 80	-----------------------    if ( !(C$20 = (*U$13).true_num_features) ) goto g10;
   [ A0]   ADD     .L2     B6,B11,B4
           NOP             1
   [ A0]   MV      .L1X    B4,A7             ; Define a twin register
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 85,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  85 | if(((pointX >= CORB_HALF_PATCH_SIZE) &&                                
;----------------------------------------------------------------------
   [ A0]   LDW     .D1T1   *+A7(4),A4        ; |85| (P) <0,0> 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 80,column 30,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |80| 
$C$DW$L$VLIB_ORB_computeOrientation_d$7$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 85,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  86 | (pointY >= CORB_HALF_PATCH_SIZE) &&                                    
;  87 | (prm[tpi].imageWidth - pointX >= CORB_HALF_PATCH_SIZE) &&              
;  88 | (prm[tpi].imageHeight - pointY >= CORB_HALF_PATCH_SIZE))) {            
;  89 | featuresLoc[cnt] = ((pointY << 0x10U) | pointX);                       
;  90 | cnt++;                                                                 
;----------------------------------------------------------------------
$C$DW$L$VLIB_ORB_computeOrientation_d$8$B:
;          EXCLUSIVE CPU CYCLES: 4
;**  	-----------------------    U$55 = U$12+v$1;
;**  	-----------------------    L$1 = C$20;
;**  	-----------------------    U$54 = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g6:
;** 85	-----------------------    C$19 = (*U$55).staticInFeatures+U$54;
;** 85	-----------------------    C$17 = C$19[1];
;** 85	-----------------------    C$18 = *C$19;
;** 85	-----------------------    if ( !((C$18 > 14)&(C$17 > 14)) ) goto g9;
;** 85	-----------------------    if ( !(((*U$55).imageWidth-C$18 > 14)&((*U$55).imageHeight-C$17 > 14)) ) goto g9;
;** 89	-----------------------    featuresLoc[cnt] = (unsigned)((int)C$17<<16)|(unsigned)C$18;
;** 90	-----------------------    ++cnt;
;**	-----------------------g9:
;** 80	-----------------------    U$54 += 4;
;** 80	-----------------------    if ( L$1 = L$1-1 ) goto g6;

           MV      .L1     A14,A16
||         LDW     .D2T1   *+SP(28),A9

           SUB     .L2X    A0,1,B1
           MV      .L1     A14,A8
           ADD     .L1     A14,A4,A3         ; |85| 
$C$DW$L$VLIB_ORB_computeOrientation_d$8$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c
;*      Loop source line                 : 80
;*      Loop opening brace source line   : 80
;*      Loop closing brace source line   : 92
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 17
;*      Unpartitioned Resource Bound     : 4
;*      Partitioned Resource Bound(*)    : 6
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     2        2     
;*      .S units                     0        1     
;*      .D units                     5        1     
;*      .M units                     0        0     
;*      .X cross paths               1        2     
;*      .T address paths             3        3     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        1     (.L or .S unit)
;*      Addition ops (.LSD)          5        3     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        2     
;*      Bound(.L .S .D .LS .LSD)     4        3     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 17 Did not find schedule
;*         ii = 18 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   * *****      *               | *                              |
;*       1: |   * *****      **              | *                              |
;*       2: |     *****      ***             | *                              |
;*       3: |     *****      ***             | *                              |
;*       4: |     *****      ***             | *                              |
;*       5: |     *****      ***             | *                              |
;*       6: |    ******      ***             | *                              |
;*       7: |   *******      ***             | *  *                           |
;*       8: |   * *****      ***             |**                              |
;*       9: |   * *****      ***             |**                              |
;*      10: |   * *****      ***             |**                              |
;*      11: |   * *****      ***             |**                              |
;*      12: |   * *****      ***             |**                              |
;*      13: |   *******      ***             |**                              |
;*      14: |   *******      ***             |**                              |
;*      15: |   *******      ***             |**                              |
;*      16: |   *******      ***             |**                              |
;*      17: |*  *******      *               | *                              |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 1
;*      Prolog not removed
;*      Collapsed prolog stages       : 0
;*
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 2
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 6 + trip_cnt * 18        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  SUB             B1,1,B1
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C252:
;*   0              LDW     .D1T1   *+A7(4),A4        ; |85| 
;*   1              NOP             4
;*   5              ADD     .L1     A16,A4,A3         ; |85| 
;*   6              LDHU    .D1T1   *A3,A17           ; |85|  ^ 
;*   7              LDHU    .D1T1   *+A3(2),A18       ; |85| 
;*   8              NOP             3
;*  11              CMPGTU  .L1     A17,14,A4         ; |85|  ^ 
;*  12              CMPGTU  .L2X    A18,14,B4         ; |85| 
;*     ||           PACK2   .L1     A18,A17,A3        ; |89| 
;*  13              AND     .L2X    B4,A4,B0          ; |85|  ^ 
;*  14      [ B0]   LDHU    .D1T1   *+A7(24),A5       ; |85|  ^ 
;*  15      [ B0]   LDHU    .D1T1   *+A7(26),A6       ; |85|  ^ 
;*  16              NOP             2
;*  18      [ B1]   BDEC    .S2     $C$C252,B1        ; |80| 
;*  19              SUB     .L1     A5,A17,A17        ; |85|  ^ 
;*  20              CMPGT   .L1     A17,14,A17        ; |85|  ^ 
;*     ||           SUB     .S1     A6,A18,A18        ; |85|  ^ 
;*  21              CMPGT   .L1     A18,14,A18        ; |85|  ^ 
;*  22      [ B0]   AND     .D1     A18,A17,A0        ; |85|  ^ 
;*     ||   [!B0]   ZERO    .S1     A0
;*     ||           ADD     .L1     4,A16,A16         ; |80| 
;*  23      [ A0]   STW     .D1T1   A3,*+A9[A8]       ; |89|  ^ 
;*     ||   [ A0]   ADD     .S1     1,A8,A8           ; |90| 
;*  24              ; BRANCHCC OCCURS {$C$C252}       ; |80| 
;*----------------------------------------------------------------------------*
$C$L2:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L3:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_ORB_computeOrientation_d$10$B:
;          EXCLUSIVE CPU CYCLES: 18
           LDHU    .D1T1   *A3,A17           ; |85| <0,6>  ^ 
           LDHU    .D1T1   *+A3(2),A18       ; |85| <0,7> 
           NOP             3
           CMPGTU  .L1     A17,14,A4         ; |85| <0,11>  ^ 

           PACK2   .L1     A18,A17,A3        ; |89| <0,12> 
||         CMPGTU  .L2X    A18,14,B4         ; |85| <0,12> 

           AND     .L2X    B4,A4,B0          ; |85| <0,13>  ^ 
   [ B0]   LDHU    .D1T1   *+A7(24),A5       ; |85| <0,14>  ^ 
   [ B0]   LDHU    .D1T1   *+A7(26),A6       ; |85| <0,15>  ^ 
           NOP             2

   [ B1]   BDEC    .S2     $C$L3,B1          ; |80| <0,18> 
||         LDW     .D1T1   *+A7(4),A4        ; |85| <1,0> 

           SUB     .L1     A5,A17,A17        ; |85| <0,19>  ^ 

           CMPGT   .L1     A17,14,A17        ; |85| <0,20>  ^ 
||         SUB     .S1     A6,A18,A18        ; |85| <0,20>  ^ 

           CMPGT   .L1     A18,14,A18        ; |85| <0,21>  ^ 

           ADD     .L1     4,A16,A16         ; |80| <0,22> 
|| [!B0]   ZERO    .S1     A0                ; <0,22> 
|| [ B0]   AND     .D1     A18,A17,A0        ; |85| <0,22>  ^ 

   [ A0]   ADD     .S1     1,A8,A8           ; |90| <0,23> 
|| [ A0]   STW     .D1T1   A3,*+A9[A8]       ; |89| <0,23>  ^ 
||         ADD     .L1     A16,A4,A3         ; |85| <1,5> 

$C$DW$L$VLIB_ORB_computeOrientation_d$10$E:
;** --------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$12$B:
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D2T1   A9,*+SP(28)
||         MV      .L1     A8,A14

$C$DW$L$VLIB_ORB_computeOrientation_d$12$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 80,column 30,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$13$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g10:
;** 94	-----------------------    C$15 = U$12+v$1;
;** 94	-----------------------    C$16 = (*C$15).imageWidth;
;** 94	-----------------------    VLIB_fillBuffer((*C$15).testPattern, (unsigned char)K$96, (void *)inImage, (*C$15).staticInImage, C$16, (*C$15).imageHeight, C$16, 1u, K$93 = &testPatternString[0]);
;** 137	-----------------------    act_kernel = 0;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 100	-----------------------    C$14 = (*U$13).imageWidth;
;** 100	-----------------------    VLIB_ORB_computeOrientation(inImage, C$14, (*U$13).imageHeight, C$14, featuresLoc, (unsigned short)cnt, outCosAngles, outSineAngles, (*U$13).orbPattern, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;**  	-----------------------    K$107 = &cycles[0];
;** 156	-----------------------    C$13 = act_kernel;  // [15]
;** 156	-----------------------    *((C$13<<3)+K$107) = *((C$13<<3)+K$107)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 137	-----------------------    act_kernel = 1;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 114	-----------------------    C$12 = (*U$13).imageWidth;
;** 114	-----------------------    VLIB_ORB_computeOrientation_cn(inImage, C$12, (*U$13).imageHeight, C$12, featuresLoc, (unsigned short)cnt, outCosAngles_cn, outSineAngles_cn, (*U$13).orbPattern, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$11 = act_kernel;  // [15]
;** 156	-----------------------    *((C$11<<3)+K$107) = *((C$11<<3)+K$107)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 94,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  94 | VLIB_fillBuffer(prm[tpi].testPattern, 128, inImage, prm[tpi].staticInIm
;     | age,                                                                   
;  95 |                 prm[tpi].imageWidth, prm[tpi].imageHeight, sizeof(uint8
;     | _t) * prm[tpi].imageWidth,                                             
;  96 |                 sizeof(uint8_t), testPatternString);                   
;  99 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 100 | VLIB_ORB_computeOrientation(inImage,                                   
; 101 |                             prm[tpi].imageWidth,                       
; 102 |                             prm[tpi].imageHeight,                      
; 103 |                             prm[tpi].imageWidth,                       
; 104 |                             featuresLoc,                               
; 105 |                             cnt,                                       
; 106 |                             outCosAngles,                              
; 107 |                             outSineAngles,                             
; 108 |                             prm[tpi].orbPattern,                       
; 109 |                             scratch);                                  
; 110 | VLIB_profile_stop();                                                   
; 113 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 114 | VLIB_ORB_computeOrientation_cn(inImage,                                
; 115 |                                prm[tpi].imageWidth,                    
; 116 |                                prm[tpi].imageHeight,                   
; 117 |                                prm[tpi].imageWidth,                    
; 118 |                                featuresLoc,                            
; 119 |                                cnt,                                    
; 120 |                                outCosAngles_cn,                        
; 121 |                                outSineAngles_cn,                       
; 122 |                                prm[tpi].orbPattern,                    
; 123 |                                scratch);                               
; 124 | VLIB_profile_stop();                                                   
; 127 | for( i=0; i < cnt; i++ ) {                                             
; 128 |     if((outCosAngles[i] != outCosAngles_cn[i]) ||                      
; 129 |        (outSineAngles[i] != outSineAngles_cn[i])) {                    
; 130 |         status_nat_vs_int = vlib_KERNEL_FAIL;                          
; 131 |         if( LevelOfFeedback > 0 ) {                                    
; 132 |             printf(" Mismatch in Index = %u \n", i);                   
; 134 |         break;                                                         
; 139 | if((prm[tpi].testPattern == STATIC) &&                                 
;----------------------------------------------------------------------
           ADD     .L2     B6,B11,B4         ; |94| 
           LDHU    .D2T2   *+B4(24),B7       ; |94| 
           LDBU    .D2T1   *B4,A4            ; |94| 
           LDHU    .D2T2   *+B4(26),B8       ; |94| 
           MVKL    .S1     testPatternString,A11
           LDW     .D2T2   *+B4(8),B6        ; |94| 

           MVKH    .S1     testPatternString,A11
||         MV      .L1X    B7,A10            ; |94| 
||         EXTU    .S2     B5,24,24,B4       ; |94| 

$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$155, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDW     .D2T1   *+SP(32),A6       ; |94| 
||         MV      .L1X    B7,A8             ; |94| 
||         MV      .S1     A11,A12           ; |94| 
||         MVK     .L2     0x1,B10           ; |94| 

$C$RL9:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |94| 
$C$DW$L$VLIB_ORB_computeOrientation_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$14$B:
;          EXCLUSIVE CPU CYCLES: 116
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         ZERO    .L2     B4                ; |137| 

$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$156, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 140 | (prm[tpi].staticOut1 != NULL) &&                                       
; 141 | (prm[tpi].staticOut2 != NULL)) {                                       
; 142 |  for( i=0; i < cnt; i++ ) {                                            
;----------------------------------------------------------------------
$C$RL10:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("getSP")
	.dwattr $C$DW$157, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 143 | if((outCosAngles_cn[i] != prm[tpi].staticOut1[i]) ||                   
; 144 |    (outSineAngles_cn[i] != prm[tpi].staticOut2[i])                     
; 145 |    ) {                                                                 
;----------------------------------------------------------------------
$C$RL11:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("initStack")
	.dwattr $C$DW$158, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL12:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 146 | status_nat_vs_ref = vlib_KERNEL_FAIL;                                  
; 147 | if( LevelOfFeedback > 0 ) {                                            
; 148 |     printf(" Mismatch in Index = %u \n", i);                           
; 150 | break;                                                                 
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 100,column 13,is_stmt,isa 0
           LDHU    .D1T1   *+A13(24),A3      ; |100| 
           LDW     .D2T1   *+SP(32),A4       ; |100| 
           EXTU    .S1     A14,16,16,A5      ; |100| 
           LDW     .D2T1   *+SP(28),A8       ; |100| 

           LDW     .D2T2   *+SP(40),B10      ; |100| 
||         LDHU    .D1T1   *+A13(26),A6      ; |100| 
||         MVKL    .S1     beg_count,A11
||         MV      .L2X    A5,B8             ; |100| 

           LDW     .D2T2   *+SP(52),B12      ; |100| 
||         LDW     .D1T1   *+A13(20),A12     ; |100| 
||         MVKH    .S1     beg_count,A11
||         MV      .L2     B4,B7             ; |146| 
||         MV      .S2X    A3,B4             ; |100| 

$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("VLIB_ORB_computeOrientation")
	.dwattr $C$DW$159, DW_AT_TI_call

           CALLP   .S2     VLIB_ORB_computeOrientation,B3
||         LDW     .D2T1   *+SP(36),A10      ; |100| 
||         STDW    .D1T2   B7:B6,*A11        ; |146| 
||         MV      .L2X    A3,B6             ; |100| 

$C$RL13:   ; CALL OCCURS {VLIB_ORB_computeOrientation} {0}  ; |100| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S1     act_kernel,A3

           MVKL    .S2     overhead,B13
||         MVKH    .S1     act_kernel,A3

           MVKH    .S2     overhead,B13
||         MV      .L1     A11,A10
||         LDW     .D1T1   *A3,A16           ; |156| 

           LDDW    .D2T2   *B13,B5:B4        ; |156| 
||         LDDW    .D1T1   *A10,A7:A6        ; |156| 

           MVKL    .S2     cycles,B8
           MVKH    .S2     cycles,B8
           NOP             1
           MV      .L1X    B8,A11

           LDDW    .D1T1   *+A11[A16],A9:A8  ; |156| 
||         ADDU    .L1X    B4,A6,A5:A4       ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 156 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) ||                     
; 157 |         (status_nat_vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;              
;----------------------------------------------------------------------
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           SUB     .L2X    B7,A3,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1     A5,A9,A3          ; |156| 
||         ADD     .S1X    B4,A31,A5         ; |156| 
||         MVKL    .S2     end_count,B4

           ADD     .L1     A3,A5,A5          ; |156| 
||         MVKH    .S2     end_count,B4

$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("setStackDepth")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D2T2   B7:B6,*B4         ; |153| 
||         STDW    .D1T1   A5:A4,*+A11[A16]  ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 159 | est_test=1;                                                            
;----------------------------------------------------------------------
$C$RL14:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         MVK     .L1     1,A4              ; |137| 

$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL15:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("getSP")
	.dwattr $C$DW$162, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("initStack")
	.dwattr $C$DW$163, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL17:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 114,column 13,is_stmt,isa 0
           LDHU    .D1T1   *+A13(24),A3      ; |114| 
           LDHU    .D1T1   *+A13(26),A6      ; |114| 
           EXTU    .S1     A14,16,16,A5      ; |114| 
           LDW     .D2T1   *+SP(28),A8       ; |114| 

           LDW     .D1T1   *+A13(20),A12     ; |114| 
||         LDW     .D2T2   *+SP(48),B10      ; |114| 
||         MV      .L2X    A5,B8             ; |114| 

           MV      .L1     A10,A4            ; |114| 
||         MV      .L2     B4,B7             ; |146| 
||         LDW     .D2T1   *+SP(44),A10      ; |114| 
||         MV      .S2X    A3,B4             ; |114| 

$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("VLIB_ORB_computeOrientation_cn")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     VLIB_ORB_computeOrientation_cn,B3
||         STDW    .D1T2   B7:B6,*A4         ; |146| 
||         LDW     .D2T1   *+SP(32),A4       ; |114| 
||         MV      .L2X    A3,B6             ; |114| 

$C$RL18:   ; CALL OCCURS {VLIB_ORB_computeOrientation_cn} {0}  ; |114| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKH    .S1     act_kernel,A3
           MV      .L1     A3,A4

           LDW     .D1T1   *A4,A8            ; |156| 
||         MVKL    .S1     beg_count,A31

           MVKH    .S1     beg_count,A31

           LDDW    .D1T1   *A31,A5:A4        ; |156| 
||         LDDW    .D2T2   *B13,B9:B8        ; |156| 

           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A11[A8],A7:A6   ; |156| 
           NOP             1
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 

           ADD     .L2     B5,B9,B9          ; |156| 
||         MV      .S2X    A3,B8

           ADD     .S2X    B9,A5,B9          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           SUB     .D2     B7,B9,B9          ; |156| 
||         EXT     .S2     B5,24,24,B16      ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 

           ADD     .L2X    B5,A7,B5          ; |156| 
||         ADD     .S2     B9,B16,B9         ; |156| 

           ADD     .L2     B5,B9,B5          ; |156| 
||         STDW    .D2T2   B7:B6,*B8         ; |153| 

$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("setStackDepth")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A11[A8]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_ORB_computeOrientation_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$15$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 54	-----------------------    status_nat_vs_int = 1;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 127	-----------------------    if ( cnt <= 0 ) goto g16;

           CMPGT   .L1     A14,0,A0          ; |127| 
||         MVK     .S1     0x1,A10           ; |54| 

   [!A0]   BNOP    .S1     $C$L9,4           ; |127| 
|| [ A0]   MV      .L1     A10,A0            ; |127| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 54,column 20,is_stmt,isa 0
           MV      .L2X    A10,B12           ; |54| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 127,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |127| 
$C$DW$L$VLIB_ORB_computeOrientation_d$15$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 127,column 32,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$16$B:
;**  	-----------------------    U$120 = outCosAngles;
;**  	-----------------------    U$122 = outCosAngles_cn;
;** 128	-----------------------    L$2 = cnt;
;** 127	-----------------------    --U$122;
;** 127	-----------------------    --U$120;
;** 127	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g12:
;** 128	-----------------------    f$6 = (*(++U$120) != *(++U$122))-1;
;** 128	-----------------------    C$10 = i*2;
;** 128	-----------------------    f$5 = (*(C$10+outSineAngles+2) != *(C$10+outSineAngles_cn+2))-1;
;** 127	-----------------------    ++i;
;** 127	-----------------------    L$2 = L$2-1;
;** 127	-----------------------    if ( L$2&f$5&f$6 ) goto g12;
;**  	-----------------------    if ( !((f$6 == 0)|(f$5 == 0)) ) goto g16;
$C$DW$L$VLIB_ORB_computeOrientation_d$16$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c
;*      Loop source line                 : 127
;*      Loop opening brace source line   : 127
;*      Loop closing brace source line   : 136
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 2
;*      Unpartitioned Resource Bound     : 3
;*      Partitioned Resource Bound(*)    : 3
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        1     
;*      .S units                     1        1     
;*      .D units                     2        2     
;*      .M units                     0        0     
;*      .X cross paths               2        2     
;*      .T address paths             2        2     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          5        3     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        1     
;*      Bound(.L .S .D .LS .LSD)     3*       3*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Did not find schedule
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Did not find schedule
;*         ii = 11 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   * * ***                      |      ****      *               |
;*       1: |   * * ***                      |      ****      *               |
;*       2: |   * * ***                      |    * ****      *               |
;*       3: |   * * ***                      |     *****      *               |
;*       4: |   *** ***                      |    * ****      *               |
;*       5: |   * *****      *               |    * ****      *               |
;*       6: |   *******                      |      ****      *               |
;*       7: |*  *** ***                      |    * ****      *               |
;*       8: |*  * * ***                      |      ****      *               |
;*       9: |*  * * ***                      |      ****      *               |
;*      10: |   * * ***                      |      ****      *               |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.250, max 2.000 }
;*      Mem bank perf. penalty (est.) : 2.2%
;*
;*      Effective ii                : { min 11.00, est 11.25, max 13.00 }
;*
;*
;*      Total cycles (est.)         : 11 + trip_cnt * 11        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C155:
;*   4              ADD     .L1     A7,A7,A6          ; |128|  ^ 
;*   5              NOP             1
;*   6              ADD     .L1     A9,A6,A4          ; |128| 
;*     ||           ADD     .L2X    B7,A6,B4          ; |128|  ^ 
;*   7      [ A0]   LDH     .D1T1   *+A4(2),A3        ; |128| 
;*     ||   [ A0]   LDH     .D2T2   *+B4(2),B6        ; |128| 
;*   8              NOP             1
;*   9      [ A0]   LDH     .D1T1   *++A8,A5          ; |128| 
;*     ||   [ A0]   LDH     .D2T2   *++B9,B16         ; |128| 
;*  10              NOP             2
;*  12              CMPEQ   .L2X    B6,A3,B4          ; |128| 
;*  13              EXT     .S2     B4,31,31,B5       ; |128| 
;*     ||           SUB     .L2     B8,1,B8           ; |127| 
;*  14              CMPEQ   .L1X    B16,A5,A4         ; |128| 
;*     ||           ADD     .S1     1,A7,A7           ; |127| 
;*     ||           AND     .L2     B5,B8,B4          ; |127|  ^ 
;*  15              EXT     .S1     A4,31,31,A16      ; |128| 
;*  16              AND     .L1X    A16,B4,A4         ; |127|  ^ 
;*  17              MV      .S1     A4,A0             ; |127| 
;*  18      [ A0]   SPWBR           $C$C155
;*  19              NOP             3
;*  22              ; BRANCHCC OCCURS {$C$C155}       ; |127| 
;*----------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 12
   [ A0]   SPLOOPW 11      ;22               ; (P) 
;** --------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_ORB_computeOrientation_d$18$B:
;          EXCLUSIVE CPU CYCLES: 11
           NOP             1

           SPMASK          D2
||         LDW     .D2T2   *+SP(40),B7

           SPMASK          D2
||         LDW     .D2T1   *+SP(44),A3       ; |128| 

           SPMASK          L1,D2
||         ADD     .L1     -2,A10,A7
||         LDW     .D2T1   *+SP(36),A5       ; |128| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 128,column 17,is_stmt,isa 0
           ADD     .L1     A7,A7,A6          ; |128| (P) <0,4>  ^ 

           SPMASK          L1
||         MV      .L1X    B10,A9

           ADD     .L1     A9,A6,A4          ; |128| (P) <0,6> 
||         ADD     .L2X    B7,A6,B4          ; |128| (P) <0,6>  ^ 

           SPMASK          L1
||         SUB     .L1     A3,2,A8           ; |127| 
|| [ A0]   LDH     .D1T1   *+A4(2),A3        ; |128| (P) <0,7> 
|| [ A0]   LDH     .D2T2   *+B4(2),B6        ; |128| (P) <0,7> 

           SPMASK          L2
||         SUB     .L2X    A5,2,B9           ; |127| 

   [ A0]   LDH     .D1T1   *++A8,A5          ; |128| (P) <0,9> 
|| [ A0]   LDH     .D2T2   *++B9,B16         ; |128| (P) <0,9> 

           SPMASK          L2
||         MV      .L2X    A14,B8            ; |128| 

           NOP             1
           CMPEQ   .L2X    B6,A3,B4          ; |128| <0,12> 

           SUB     .L2     B8,1,B8           ; |127| <0,13> 
||         EXT     .S2     B4,31,31,B5       ; |128| <0,13> 

           ADD     .S1     1,A7,A7           ; |127| <0,14> 
||         CMPEQ   .L1X    B16,A5,A4         ; |128| <0,14> 
||         AND     .L2     B5,B8,B4          ; |127| <0,14>  ^ 

           EXT     .S1     A4,31,31,A16      ; |128| <0,15> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 127,column 23,is_stmt,isa 0
           AND     .L1X    A16,B4,A4         ; |127| <0,16>  ^ 
           MV      .S1     A4,A0             ; |127| <0,17> 
           NOP             2
           NOP             1
           SPKERNEL 0,0
$C$DW$L$VLIB_ORB_computeOrientation_d$18$E:
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$20$B:
;          EXCLUSIVE CPU CYCLES: 9

           CMPEQ   .L2     B5,0,B4
||         CMPEQ   .L1     A16,0,A6
||         STW     .D2T2   B7,*+SP(40)

           STW     .D2T1   A9,*+SP(48)
           OR      .L1X    B4,A6,A0

           MV      .L1     A0,A2             ; branch predicate copy
|| [!A0]   B       .S1     $C$L10
|| [ A0]   ZERO    .D1     A10               ; |130| 
||         LDW     .D2T1   *+SP(24),A0       ; |130| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
   [!A2]   LDBU    .D1T1   *A13,A6           ; |139| 
   [!A2]   LDW     .D1T1   *+A13(12),A1      ; |139| 
   [!A2]   LDW     .D1T1   *+A13(16),A0      ; |139| 
   [!A2]   ZERO    .L1     A7                ; |139| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L10}  
$C$DW$L$VLIB_ORB_computeOrientation_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$21$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 130	-----------------------    status_nat_vs_int = 0;
;** 131	-----------------------    if ( !LevelOfFeedback ) goto g16;

   [!A0]   B       .S1     $C$L10            ; |131| 
|| [!A0]   LDBU    .D1T1   *A13,A6           ; |139| 
|| [ A0]   MVKL    .S2     $C$SL2+0,B4
||         MV      .L2X    A0,B0             ; guard predicate rewrite

   [!A0]   LDW     .D1T1   *+A13(12),A1      ; |139| 
|| [ A0]   MVKH    .S2     $C$SL2+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 132,column 25,is_stmt,isa 0
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("printf")
	.dwattr $C$DW$166, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |132| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
   [!A0]   LDW     .D1T1   *+A13(16),A0      ; |139| 
   [!B0]   ZERO    .L1     A7                ; |139| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 131,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |131| 
$C$DW$L$VLIB_ORB_computeOrientation_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$22$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 132	-----------------------    printf((const char *)" Mismatch in Index = %u \n", i);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 132,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |132| 

           STW     .D2T1   A7,*+SP(8)        ; |132| 
||         ADDKPC  .S2     $C$RL20,B3,0      ; |132| 

$C$RL20:   ; CALL OCCURS {printf} {0}        ; |132| 
$C$DW$L$VLIB_ORB_computeOrientation_d$22$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_ORB_computeOrientation_d$23$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
           LDBU    .D1T1   *A13,A6           ; |139| 
           LDW     .D1T1   *+A13(12),A1      ; |139| 
           LDW     .D1T1   *+A13(16),A0      ; |139| 
           ZERO    .L1     A7                ; |139| 
           NOP             1
$C$DW$L$VLIB_ORB_computeOrientation_d$23$E:
;** --------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 127,column 23,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$24$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g16:
;** 139	-----------------------    v$1 = prm;
;** 139	-----------------------    if ( !(((*U$13).testPattern == 4)&((*U$13).staticOut1 != NULL)&((*U$13).staticOut2 != NULL)) ) goto g23;

           LDW     .D2T2   *+SP(20),B10      ; |139| 
||         CMPEQ   .L1     A6,4,A6           ; |139| 
||         ZERO    .L2     B4                ; |139| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
   [ A1]   MVK     .L1     0x1,A7            ; |139| 

           AND     .L1     A7,A6,A6          ; |139| 
|| [ A0]   MVK     .L2     0x1,B4            ; |139| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 142,column 27,is_stmt,isa 0
           CMPGT   .L1     A14,0,A0          ; |142| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
           AND     .L2X    B4,A6,B0          ; |139| 

   [!B0]   ADD     .L2     B10,B11,B5        ; |162| 
|| [!B0]   MVK     .L1     0x1,A0            ; |142| nullify predicate
|| [!B0]   B       .S2     $C$L16            ; |139| 
|| [!B0]   MVKL    .S1     $C$SL3+0,A3

   [!A0]   B       .S2     $C$L14            ; |142| 
|| [!B0]   LDW     .D2T2   *+B5(32),B5       ; |162| 
|| [!B0]   MVKH    .S1     $C$SL3+0,A3

   [!B0]   MVKL    .S2     est_test,B4
|| [!B0]   STW     .D2T1   A3,*+SP(4)        ; |162| 
|| [!B0]   MVK     .L1     1,A3              ; |159| 

   [!B0]   MVKL    .S2     testPatternString,B6
|| [!B0]   MVKL    .S1     desc,A4

$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

   [!B0]   CALL    .S1     sprintf           ; |162| 
|| [!B0]   MVKH    .S2     est_test,B4

   [!B0]   MVKH    .S2     testPatternString,B6
           ; BRANCHCC OCCURS {$C$L16}        ; |139| 
$C$DW$L$VLIB_ORB_computeOrientation_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$25$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 142	-----------------------    if ( cnt <= 0 ) goto g23;

   [ A0]   SHL     .S1     A15,5,A6
|| [ A0]   MVK     .L2     0x1,B1

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 142,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |142| 
$C$DW$L$VLIB_ORB_computeOrientation_d$25$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 142,column 36,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$26$B:
;**  	-----------------------    U$55 = U$12+v$1;
;**  	-----------------------    U$122 = outCosAngles_cn;
;**  	-----------------------    U$151 = (v$1[tpi]).staticOut1;
;** 143	-----------------------    L$3 = cnt;
;** 142	-----------------------    --U$151;
;** 142	-----------------------    --U$122;
;** 142	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g19:
;** 143	-----------------------    f$8 = (*(++U$122) != *(++U$151))-1;
;** 143	-----------------------    C$9 = i*2;
;** 143	-----------------------    f$7 = (*(C$9+outSineAngles_cn+2) != *((*U$55).staticOut2+C$9+2))-1;
;** 142	-----------------------    ++i;
;** 142	-----------------------    L$3 = L$3-1;
;** 142	-----------------------    if ( L$3&f$7&f$8 ) goto g19;
;**  	-----------------------    if ( !((f$8 == 0)|(f$7 == 0)) ) goto g23;
$C$DW$L$VLIB_ORB_computeOrientation_d$26$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c
;*      Loop source line                 : 142
;*      Loop opening brace source line   : 142
;*      Loop closing brace source line   : 152
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 10
;*      Unpartitioned Resource Bound     : 4
;*      Partitioned Resource Bound(*)    : 4
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        1     
;*      .S units                     1        1     
;*      .D units                     3        2     
;*      .M units                     0        0     
;*      .X cross paths               2        0     
;*      .T address paths             3        2     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          5        8     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        1     
;*      Bound(.L .S .D .LS .LSD)     4*       4*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 10 Did not find schedule
;*         ii = 11 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   ******                       |**   ** **      ***             |
;*       1: |   ******                       |**   ** **      ***             |
;*       2: |   ******                       |**   ** **      ***             |
;*       3: |   *******                      |**  *** **      ***             |
;*       4: |   *******                      |**  *** **      ***             |
;*       5: |   *******                      | *  *** **      ***             |
;*       6: |*  ******                       | *   *****      ***             |
;*       7: |   *******                      | *  ******      ***             |
;*       8: |   *******                      | *   ** **      ***             |
;*       9: |   ******                       | *   ** **      ***             |
;*      10: |   ******                       | *  *** **      ***             |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.250, max 2.000 }
;*      Mem bank perf. penalty (est.) : 2.2%
;*
;*      Effective ii                : { min 11.00, est 11.25, max 13.00 }
;*
;*
;*      Total cycles (est.)         : 11 + trip_cnt * 11        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,B1
;*                  MV              B1,B0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C110:
;*   2              LDW     .D1T1   *+A7(16),A9       ; |143| 
;*   3              NOP             2
;*   5              ADD     .S2     B16,B16,B7        ; |143| 
;*   6              ADD     .L2     B5,B7,B4          ; |143| 
;*   7      [ B1]   LDH     .D1T2   *++A6,B9          ; |143|  ^ 
;*     ||           ADD     .L1X    B7,A9,A9          ; |143| 
;*     ||   [ B1]   LDH     .D2T1   *+B4(2),A5        ; |143|  ^ 
;*   8      [ B1]   LDH     .D2T2   *++B6,B8          ; |143|  ^ 
;*     ||   [ B1]   LDH     .D1T1   *+A9(2),A4        ; |143|  ^ 
;*   9              NOP             4
;*  13              CMPEQ   .L2     B9,B8,B4          ; |143|  ^ 
;*     ||           CMPEQ   .L1     A5,A4,A9          ; |143|  ^ 
;*  14              EXT     .S2     B4,31,31,B4       ; |143|  ^ 
;*     ||           EXT     .S1     A9,31,31,A9       ; |143|  ^ 
;*     ||           SUB     .L1     A8,1,A8           ; |142| 
;*  15              ADD     .L2     1,B16,B16         ; |142| 
;*     ||           AND     .S1     A9,A8,A9          ; |142|  ^ 
;*     ||   [ B0]   MV      .S2     B4,B18            ; |142| 
;*     ||   [ B0]   MV      .L1     A9,A3             ; |142| 
;*  16              AND     .L1X    B4,A9,A0          ; |142|  ^ 
;*     ||   [ B1]   MV      .L2     B16,B17           ; |142| 
;*  17      [!A0]   ZERO    .S2     B1                ; |142|  ^ 
;*  18      [ B1]   SPWBR           $C$C110
;*  19              NOP             1
;*  20              MV      .L2     B1,B4             ; |142| Split a long life(pre-sched)
;*  21              MV      .L2     B4,B0             ; |142| Split a long life(pre-sched)
;*  22              ; BRANCHCC OCCURS {$C$C110}       ; |142| 
;*
;*       RESTORE CODE
;*
;*                  MV              B17,B16
;*----------------------------------------------------------------------------*
$C$L11:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 12

   [ B1]   SPLOOPW 11      ;22               ; (P) 
||         ADD     .L2     B10,B11,B5
||         ADDAW   .D1     A6,A15,A6

;** --------------------------------------------------------------------------*
$C$L12:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_ORB_computeOrientation_d$28$B:
;          EXCLUSIVE CPU CYCLES: 11

           SPMASK          D2
||         LDW     .D2T1   *+SP(44),A31

           SPMASK          L1,L2,D2
||         LDW     .D2T2   *+SP(48),B5
||         MV      .L1X    B5,A7             ; Define a twin register
||         ADD     .L2X    B10,A6,B6

           SPMASK          D2
||         LDW     .D2T2   *+B6(12),B6
||         LDW     .D1T1   *+A7(16),A9       ; |143| (P) <0,2> 

           NOP             1

           SPMASK          L2
||         MVK     .L2     0xffffffff,B16    ; |142| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 143,column 21,is_stmt,isa 0
           ADD     .S2     B16,B16,B7        ; |143| (P) <0,5> 

           SPMASK          L1
||         SUB     .L1     A31,2,A6          ; |142| 
||         ADD     .L2     B5,B7,B4          ; |143| (P) <0,6> 

           SPMASK          L2
||         SUB     .L2     B6,2,B6           ; |142| 
|| [ B1]   LDH     .D1T2   *++A6,B9          ; |143| (P) <0,7>  ^ 
|| [ B1]   LDH     .D2T1   *+B4(2),A5        ; |143| (P) <0,7>  ^ 
||         ADD     .L1X    B7,A9,A9          ; |143| (P) <0,7> 

   [ B1]   LDH     .D2T2   *++B6,B8          ; |143| (P) <0,8>  ^ 
|| [ B1]   LDH     .D1T1   *+A9(2),A4        ; |143| (P) <0,8>  ^ 

           NOP             1

           SPMASK          L1,L2
||         MV      .L1     A14,A8            ; |143| 
||         MV      .L2     B1,B0

           NOP             2

           CMPEQ   .L2     B9,B8,B4          ; |143| <0,13>  ^ 
||         CMPEQ   .L1     A5,A4,A9          ; |143| <0,13>  ^ 

           SUB     .L1     A8,1,A8           ; |142| <0,14> 
||         EXT     .S2     B4,31,31,B4       ; |143| <0,14>  ^ 
||         EXT     .S1     A9,31,31,A9       ; |143| <0,14>  ^ 

           ADD     .L2     1,B16,B16         ; |142| <0,15> 
|| [ B0]   MV      .S2     B4,B18            ; |142| <0,15> 
|| [ B0]   MV      .L1     A9,A3             ; |142| <0,15> 
||         AND     .S1     A9,A8,A9          ; |142| <0,15>  ^ 

   [ B1]   MV      .L2     B16,B17           ; |142| <0,16> 
||         AND     .L1X    B4,A9,A0          ; |142| <0,16>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 142,column 27,is_stmt,isa 0
   [!A0]   ZERO    .S2     B1                ; |142| <0,17>  ^ 
           NOP             2
           MV      .L2     B1,B4             ; |142| <0,20> Split a long life(pre-sched)

           SPKERNEL 0,0
||         MV      .L2     B4,B0             ; |142| <0,21> Split a long life(pre-sched)

$C$DW$L$VLIB_ORB_computeOrientation_d$28$E:
;** --------------------------------------------------------------------------*
$C$L13:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$30$B:
;          EXCLUSIVE CPU CYCLES: 9

           CMPEQ   .L2X    A3,0,B4
||         CMPEQ   .L1X    B18,0,A3
||         STW     .D2T2   B5,*+SP(48)
||         ADD     .S2     B10,B11,B5        ; |162| 

           MV      .L2     B17,B16
           OR      .L1X    B4,A3,A0

   [!A0]   BNOP    .S1     $C$L15,3
||         MV      .L1     A0,A1             ; branch predicate copy
|| [ A0]   ZERO    .L2     B12               ; |146| 
||         LDW     .D2T1   *+SP(24),A0       ; |146| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 162,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 162 | sprintf(desc, "%s generated input | Opt and NatC results compared | num
;     | Features= %d, %s",                                                     
;----------------------------------------------------------------------
   [!A1]   LDW     .D2T2   *+B5(32),B5       ; |162| 
   [!A1]   MVKL    .S1     $C$SL3+0,A3
           ; BRANCHCC OCCURS {$C$L15}  
$C$DW$L$VLIB_ORB_computeOrientation_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$31$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 146	-----------------------    status_nat_vs_ref = 0;
;** 147	-----------------------    if ( !LevelOfFeedback ) goto g23;

   [!A0]   BNOP    .S1     $C$L15,1          ; |147| 
|| [ A0]   MVKL    .S2     $C$SL2+0,B4
|| [!A0]   ADD     .L2     B10,B11,B5        ; |162| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 148,column 29,is_stmt,isa 0
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("printf")
	.dwattr $C$DW$168, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |148| 
   [!A0]   MVKL    .S1     $C$SL3+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 162,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 163 | testPatternString, cnt, prm[tpi].desc);                                
;----------------------------------------------------------------------
   [!A0]   LDW     .D2T2   *+B5(32),B5       ; |162| 
   [ A0]   MVKH    .S2     $C$SL2+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 147,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |147| 
$C$DW$L$VLIB_ORB_computeOrientation_d$31$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$32$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 148	-----------------------    printf((const char *)" Mismatch in Index = %u \n", i);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 148,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |148| 

           STW     .D2T2   B16,*+SP(8)       ; |148| 
||         ADDKPC  .S2     $C$RL21,B3,0      ; |148| 

$C$RL21:   ; CALL OCCURS {printf} {0}        ; |148| 
$C$DW$L$VLIB_ORB_computeOrientation_d$32$E:
;** --------------------------------------------------------------------------*
$C$L14:    
$C$DW$L$VLIB_ORB_computeOrientation_d$33$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 162,column 13,is_stmt,isa 0
           ADD     .L2     B10,B11,B5        ; |162| 

           LDW     .D2T2   *+B5(32),B5       ; |162| 
||         MVKL    .S1     $C$SL3+0,A3

$C$DW$L$VLIB_ORB_computeOrientation_d$33$E:
;** --------------------------------------------------------------------------*
$C$L15:    
$C$DW$L$VLIB_ORB_computeOrientation_d$34$B:
;          EXCLUSIVE CPU CYCLES: 4

           MVKL    .S2     testPatternString,B6
||         MVKH    .S1     $C$SL3+0,A3

           MVKL    .S2     est_test,B4
||         STW     .D2T1   A3,*+SP(4)        ; |162| 
||         MVK     .L1     1,A3              ; |159| 
||         MVKL    .S1     desc,A4

$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x04)
	.dwattr $C$DW$169, DW_AT_name("sprintf")
	.dwattr $C$DW$169, DW_AT_TI_call

           MVKH    .S2     testPatternString,B6
||         CALL    .S1     sprintf           ; |162| 

           MVKH    .S2     est_test,B4
$C$DW$L$VLIB_ORB_computeOrientation_d$34$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 139,column 13,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$35$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g23:
;** 159	-----------------------    est_test = 1;
;** 162	-----------------------    sprintf(K$168, (const char *)"%s generated input | Opt and NatC results compared | numFeatures= %d, %s", K$93, cnt, (*(U$12+v$1)).desc);
;** 165	-----------------------    VLIB_formula_add_test(cnt, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$168, 0);
;** 167	-----------------------    goto g25;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 162,column 13,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(16)       ; |162| 
           STW     .D2T2   B6,*+SP(8)        ; |162| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 159,column 13,is_stmt,isa 0
           STW     .D2T1   A3,*B4            ; |159| 

           STW     .D2T1   A14,*+SP(12)      ; |162| 
||         ADDKPC  .S2     $C$RL22,B3,0      ; |162| 
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 162,column 13,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {sprintf} {0}       ; |162| 
$C$DW$L$VLIB_ORB_computeOrientation_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$36$B:
;          EXCLUSIVE CPU CYCLES: 8
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 165,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 165 | VLIB_formula_add_test(cnt, NULL, NULL, fail, desc, NULL);              
;----------------------------------------------------------------------
           CMPEQ   .L1     A10,0,A3          ; |165| 

           CMPEQ   .L2     B12,0,B4          ; |165| 
||         MVKL    .S1     desc,A8
||         ZERO    .S2     B8                ; |165| 

$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         OR      .L2X    B4,A3,B6          ; |165| 
||         ZERO    .D2     B4                ; |165| 
||         MVKH    .S1     desc,A8
||         MV      .L1     A14,A4            ; |165| 
||         ZERO    .D1     A6                ; |165| 

$C$RL23:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |165| 
$C$DW$L$VLIB_ORB_computeOrientation_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$37$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 167,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 167 | } else {                                                               
; 169 |     sprintf(desc, "numFeatures= %d",                                   
; 170 |             prm[tpi].true_num_features);                               
; 171 |     VLIB_skip_test(desc);                                              
;----------------------------------------------------------------------
           B       .S1     $C$L18            ; |167| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 175,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 175 | VLIB_free(scratch);                                                    
;----------------------------------------------------------------------
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("VLIB_free")
	.dwattr $C$DW$171, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |175| 
           LDW     .D2T1   *+SP(52),A4       ; |175| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 167,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L18}          ; |167| 
$C$DW$L$VLIB_ORB_computeOrientation_d$37$E:
;** --------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 74,column 9,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$38$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g24:
;** 169	-----------------------    sprintf(K$168, (const char *)"numFeatures= %d", (*U$13).true_num_features);
;** 171	-----------------------    VLIB_skip_test(K$168);
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x04)
	.dwattr $C$DW$172, DW_AT_name("sprintf")
	.dwattr $C$DW$172, DW_AT_TI_call

           LDW     .D1T1   *+A13(28),A3      ; |169| 
||         CALL    .S1     sprintf           ; |169| 
||         MVKL    .S2     $C$SL4+0,B4

           MVKL    .S1     desc,A4
           MVKH    .S2     $C$SL4+0,B4
           MVKH    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 169,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |169| 

           STW     .D2T1   A3,*+SP(8)        ; |169| 
||         ADDKPC  .S2     $C$RL24,B3,0      ; |169| 

$C$RL24:   ; CALL OCCURS {sprintf} {0}       ; |169| 
$C$DW$L$VLIB_ORB_computeOrientation_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$39$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 171,column 13,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |171| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 175,column 9,is_stmt,isa 0
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("VLIB_free")
	.dwattr $C$DW$174, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |175| 
           LDW     .D2T1   *+SP(52),A4       ; |175| 
           NOP             3
$C$DW$L$VLIB_ORB_computeOrientation_d$39$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 167,column 9,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeOrientation_d$40$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g25:
;** 175	-----------------------    VLIB_free((void *)scratch);
;** 176	-----------------------    VLIB_align_free((void *)outCosAngles);
;** 177	-----------------------    VLIB_align_free((void *)outSineAngles);
;** 178	-----------------------    free((void *)outCosAngles_cn);
;** 179	-----------------------    free((void *)outSineAngles_cn);
;** 180	-----------------------    VLIB_align_free((void *)inImage);
;** 181	-----------------------    VLIB_align_free((void *)featuresLoc);
;** 51	-----------------------    U$12 += 36;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 175,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL26,B3,0      ; |175| 
$C$RL26:   ; CALL OCCURS {VLIB_free} {0}     ; |175| 
$C$DW$L$VLIB_ORB_computeOrientation_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$41$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(36),A4       ; |176| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 176,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 176 | VLIB_align_free(outCosAngles);                                         
;----------------------------------------------------------------------
$C$RL27:   ; CALL OCCURS {VLIB_align_free} {0}  ; |176| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(40),A4       ; |177| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 177,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 177 | VLIB_align_free(outSineAngles);                                        
;----------------------------------------------------------------------
$C$RL28:   ; CALL OCCURS {VLIB_align_free} {0}  ; |177| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("free")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |178| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 178,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 178 | free(outCosAngles_cn);                                                 
;----------------------------------------------------------------------
$C$RL29:   ; CALL OCCURS {free} {0}          ; |178| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("free")
	.dwattr $C$DW$178, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(48),A4       ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 179,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 179 | free(outSineAngles_cn);                                                
;----------------------------------------------------------------------
$C$RL30:   ; CALL OCCURS {free} {0}          ; |179| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$179, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(32),A4       ; |180| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 180,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 180 | VLIB_align_free(inImage);                                              
;----------------------------------------------------------------------
$C$RL31:   ; CALL OCCURS {VLIB_align_free} {0}  ; |180| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$180, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(28),A4       ; |181| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 181,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 181 | VLIB_align_free(featuresLoc);                                          
;----------------------------------------------------------------------
$C$RL32:   ; CALL OCCURS {VLIB_align_free} {0}  ; |181| 
$C$DW$L$VLIB_ORB_computeOrientation_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeOrientation_d$42$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADDK    .S2     36,B11            ; |51| 
           ADD     .L1     1,A15,A15         ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 61,column 21,is_stmt,isa 0
           ADDK    .S1     36,A13            ; |61| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,A15,A0         ; |51| 

   [ A0]   BNOP    .S1     $C$L1,4           ; |51| 
|| [ A0]   LDW     .D1T1   *+A13(28),A10     ; |61| 
|| [ A0]   MVK     .L1     0x4,A4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 63,column 21,is_stmt,isa 0
           SHL     .S1     A10,2,A3          ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_ORB_computeOrientation_d$42$E:
;** --------------------------------------------------------------------------*
$C$L19:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g26:
;** 185	-----------------------    VLIB_profile_cycle_report(2, "N = numFeatures", "numFeatures");
;** 158	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [17]
;** 165	-----------------------    VLIB_stack_memory();  // [17]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL6+0,B4

           MVKL    .S1     $C$SL5+0,A6
||         MVKH    .S2     $C$SL6+0,B4

$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL5+0,A6
||         MVK     .L1     0x2,A4            ; |185| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 185,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 185 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 186 |                           "N = numFeatures",                           
; 187 |                           "numFeatures");                              
; 190 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL33:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |185| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL7+0,B4
           MVKH    .S2     $C$SL7+0,B4
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("printf")
	.dwattr $C$DW$182, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |158| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h",line 158,column 5,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {printf} {0}        ; |158| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$183, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_memory.h",line 165,column 5,is_stmt,isa 0
$C$RL35:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |165| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c",line 191,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(64),B3      ; |191| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |191| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$185	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$185, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.se66:$C$L1:1:1426783427")
	.dwattr $C$DW$185, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$185, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$185, DW_AT_TI_end_line(0xb6)
$C$DW$186	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$186, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$4$B)
	.dwattr $C$DW$186, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$4$E)
$C$DW$187	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$187, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$38$B)
	.dwattr $C$DW$187, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$38$E)
$C$DW$188	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$188, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$32$B)
	.dwattr $C$DW$188, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$32$E)
$C$DW$189	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$189, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$25$B)
	.dwattr $C$DW$189, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$25$E)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$26$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$26$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$30$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$30$E)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$31$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$31$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$33$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$33$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$22$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$22$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$8$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$8$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$5$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$5$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$6$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$6$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$7$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$7$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$12$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$12$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$13$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$13$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$14$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$14$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$15$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$15$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$16$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$16$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$20$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$20$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$21$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$21$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$23$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$23$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$24$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$24$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$34$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$34$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$35$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$35$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$36$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$36$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$37$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$37$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$39$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$39$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$40$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$40$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$41$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$41$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$42$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$42$E)

$C$DW$216	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$216, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.se66:$C$L12:2:1426783427")
	.dwattr $C$DW$216, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$216, DW_AT_TI_begin_line(0x8e)
	.dwattr $C$DW$216, DW_AT_TI_end_line(0x98)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$28$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$28$E)
	.dwendtag $C$DW$216


$C$DW$218	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$218, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.se66:$C$L3:2:1426783427")
	.dwattr $C$DW$218, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$218, DW_AT_TI_begin_line(0x50)
	.dwattr $C$DW$218, DW_AT_TI_end_line(0x5c)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$10$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$10$E)
	.dwendtag $C$DW$218


$C$DW$220	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$220, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.se66:$C$L7:2:1426783427")
	.dwattr $C$DW$220, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$220, DW_AT_TI_begin_line(0x7f)
	.dwattr $C$DW$220, DW_AT_TI_end_line(0x88)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeOrientation_d$18$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeOrientation_d$18$E)
	.dwendtag $C$DW$220

	.dwendtag $C$DW$185

	.dwattr $C$DW$90, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_ORB_computeOrientation/VLIB_ORB_computeOrientation_d.c")
	.dwattr $C$DW$90, DW_AT_TI_end_line(0xbf)
	.dwattr $C$DW$90, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$90

;; Inlined function references:
;; [ 14] VLIB_profile_start
;; [ 15] VLIB_profile_stop
;; [ 17] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_ORB_computeOrientation",0
$C$SL2:	.string	" Mismatch in Index = %u ",10,0
$C$SL3:	.string	"%s generated input | Opt and NatC results compared | numFea"
	.string	"tures= %d, %s",0
$C$SL4:	.string	"numFeatures= %d",0
$C$SL5:	.string	"numFeatures",0
$C$SL6:	.string	"N = numFeatures",0
$C$SL7:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_malloc
	.global	VLIB_align_free
	.global	VLIB_free
	.global	VLIB_ORB_computeOrientation
	.global	VLIB_ORB_computeOrientation_cn
	.global	orb_computeOrientation_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$65	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x04)
$C$DW$222	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_OK"), DW_AT_const_value(0x00)
	.dwattr $C$DW$222, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$222, DW_AT_decl_line(0xa2)
	.dwattr $C$DW$222, DW_AT_decl_column(0x05)
$C$DW$223	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_FAIL"), DW_AT_const_value(-1)
	.dwattr $C$DW$223, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$223, DW_AT_decl_line(0xa3)
	.dwattr $C$DW$223, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$65

	.dwattr $C$DW$T$65, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$65, DW_AT_decl_line(0xa1)
	.dwattr $C$DW$T$65, DW_AT_decl_column(0x0e)
$C$DW$T$66	.dwtag  DW_TAG_typedef, DW_AT_name("CORBResult")
	.dwattr $C$DW$T$66, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$T$66, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$66, DW_AT_decl_line(0xa4)
	.dwattr $C$DW$T$66, DW_AT_decl_column(0x02)

$C$DW$T$76	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x04)
$C$DW$224	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$224, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$224, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$224, DW_AT_decl_column(0x05)
$C$DW$225	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$225, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$225, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$225, DW_AT_decl_column(0x05)
$C$DW$226	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$226, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$226, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$226, DW_AT_decl_column(0x05)
$C$DW$227	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$227, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$227, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$227, DW_AT_decl_column(0x05)
$C$DW$228	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$228, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$228, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$228, DW_AT_decl_column(0x05)
$C$DW$229	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$229, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$229, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$229, DW_AT_decl_column(0x05)
$C$DW$230	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$230, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$230, DW_AT_decl_line(0x80)
	.dwattr $C$DW$230, DW_AT_decl_column(0x05)
$C$DW$231	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$231, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$231, DW_AT_decl_line(0x81)
	.dwattr $C$DW$231, DW_AT_decl_column(0x05)
$C$DW$232	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$232, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$232, DW_AT_decl_line(0x82)
	.dwattr $C$DW$232, DW_AT_decl_column(0x05)
$C$DW$233	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$233, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$233, DW_AT_decl_line(0x83)
	.dwattr $C$DW$233, DW_AT_decl_column(0x05)
$C$DW$234	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$234, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$234, DW_AT_decl_line(0x84)
	.dwattr $C$DW$234, DW_AT_decl_column(0x05)
$C$DW$235	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$235, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$235, DW_AT_decl_line(0x85)
	.dwattr $C$DW$235, DW_AT_decl_column(0x05)
$C$DW$236	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$236, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$236, DW_AT_decl_line(0x86)
	.dwattr $C$DW$236, DW_AT_decl_column(0x05)
$C$DW$237	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$237, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0x87)
	.dwattr $C$DW$237, DW_AT_decl_column(0x05)
$C$DW$238	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$238, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x88)
	.dwattr $C$DW$238, DW_AT_decl_column(0x05)
$C$DW$239	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$239, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x89)
	.dwattr $C$DW$239, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$76

	.dwattr $C$DW$T$76, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$76, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$76, DW_AT_decl_column(0x0e)
$C$DW$T$77	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$77, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$T$77, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$77, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$77, DW_AT_decl_column(0x03)

$C$DW$T$78	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x04)
$C$DW$240	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$240, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$240, DW_AT_decl_column(0x05)
$C$DW$241	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$241, DW_AT_decl_column(0x05)
$C$DW$242	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$242, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$78

	.dwattr $C$DW$T$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$T$78, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$78, DW_AT_decl_column(0x06)

$C$DW$T$79	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x04)
$C$DW$243	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x72)
	.dwattr $C$DW$243, DW_AT_decl_column(0x05)
$C$DW$244	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x73)
	.dwattr $C$DW$244, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$79

	.dwattr $C$DW$T$79, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_test.h")
	.dwattr $C$DW$T$79, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$79, DW_AT_decl_column(0x06)

$C$DW$T$80	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x04)
$C$DW$245	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_FALSE"), DW_AT_const_value(0x00)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x8f)
	.dwattr $C$DW$245, DW_AT_decl_column(0x05)
$C$DW$246	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_TRUE"), DW_AT_const_value(0x01)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x90)
	.dwattr $C$DW$246, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$80

	.dwattr $C$DW$T$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$80, DW_AT_decl_line(0x8e)
	.dwattr $C$DW$T$80, DW_AT_decl_column(0x0e)
$C$DW$T$81	.dwtag  DW_TAG_typedef, DW_AT_name("CORB_Bool")
	.dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$T$81, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$81, DW_AT_decl_line(0x91)
	.dwattr $C$DW$T$81, DW_AT_decl_column(0x02)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x24)
$C$DW$247	.dwtag  DW_TAG_member
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$247, DW_AT_name("testPattern")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$247, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$247, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x24)
	.dwattr $C$DW$247, DW_AT_decl_column(0x0f)
$C$DW$248	.dwtag  DW_TAG_member
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$248, DW_AT_name("staticInFeatures")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("staticInFeatures")
	.dwattr $C$DW$248, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$248, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x25)
	.dwattr $C$DW$248, DW_AT_decl_column(0x0f)
$C$DW$249	.dwtag  DW_TAG_member
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$249, DW_AT_name("staticInImage")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("staticInImage")
	.dwattr $C$DW$249, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$249, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x26)
	.dwattr $C$DW$249, DW_AT_decl_column(0x0f)
$C$DW$250	.dwtag  DW_TAG_member
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$250, DW_AT_name("staticOut1")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("staticOut1")
	.dwattr $C$DW$250, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$250, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x27)
	.dwattr $C$DW$250, DW_AT_decl_column(0x0f)
$C$DW$251	.dwtag  DW_TAG_member
	.dwattr $C$DW$251, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$251, DW_AT_name("staticOut2")
	.dwattr $C$DW$251, DW_AT_TI_symbol_name("staticOut2")
	.dwattr $C$DW$251, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$251, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x28)
	.dwattr $C$DW$251, DW_AT_decl_column(0x0f)
$C$DW$252	.dwtag  DW_TAG_member
	.dwattr $C$DW$252, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$252, DW_AT_name("orbPattern")
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("orbPattern")
	.dwattr $C$DW$252, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$252, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$252, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x29)
	.dwattr $C$DW$252, DW_AT_decl_column(0x0f)
$C$DW$253	.dwtag  DW_TAG_member
	.dwattr $C$DW$253, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$253, DW_AT_name("imageWidth")
	.dwattr $C$DW$253, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$253, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$253, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$253, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$253, DW_AT_decl_column(0x0f)
$C$DW$254	.dwtag  DW_TAG_member
	.dwattr $C$DW$254, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$254, DW_AT_name("imageHeight")
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$254, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$254, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$254, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$254, DW_AT_decl_column(0x0f)
$C$DW$255	.dwtag  DW_TAG_member
	.dwattr $C$DW$255, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$255, DW_AT_name("true_num_features")
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("true_num_features")
	.dwattr $C$DW$255, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$255, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$255, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$255, DW_AT_decl_column(0x0f)
$C$DW$256	.dwtag  DW_TAG_member
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$256, DW_AT_name("desc")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$256, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$256, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$256, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$256, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$82	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$82, DW_AT_address_class(0x20)
$C$DW$T$84	.dwtag  DW_TAG_typedef, DW_AT_name("orb_computeOrientation_testParams_t")
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$84, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\VLIB_ORB_computeOrientation_idat.h")
	.dwattr $C$DW$T$84, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$84, DW_AT_decl_column(0x03)
$C$DW$T$85	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$T$85, DW_AT_address_class(0x20)
$C$DW$T$86	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$T$86, DW_AT_address_class(0x20)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x18)
$C$DW$257	.dwtag  DW_TAG_member
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$257, DW_AT_name("fd")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$257, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$257, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$257, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x49)
	.dwattr $C$DW$257, DW_AT_decl_column(0x0b)
$C$DW$258	.dwtag  DW_TAG_member
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$258, DW_AT_name("buf")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$258, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$258, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$258, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$258, DW_AT_decl_column(0x16)
$C$DW$259	.dwtag  DW_TAG_member
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$259, DW_AT_name("pos")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$259, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$259, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$259, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$259, DW_AT_decl_column(0x16)
$C$DW$260	.dwtag  DW_TAG_member
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$260, DW_AT_name("bufend")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$260, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$260, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$260, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$260, DW_AT_decl_column(0x16)
$C$DW$261	.dwtag  DW_TAG_member
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$261, DW_AT_name("buff_stop")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$261, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$261, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$261, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$261, DW_AT_decl_column(0x16)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$262, DW_AT_name("flags")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$262, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$87	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$87, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$87, DW_AT_decl_column(0x03)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$263, DW_AT_name("quot")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$263, DW_AT_decl_column(0x16)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$264, DW_AT_name("rem")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$264, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$88	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$88, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$88, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$88, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$88, DW_AT_decl_column(0x23)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$265, DW_AT_name("quot")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x40)
	.dwattr $C$DW$265, DW_AT_decl_column(0x17)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$266, DW_AT_name("rem")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x40)
	.dwattr $C$DW$266, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$89	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$89, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$89, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$89, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$89, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$89, DW_AT_decl_column(0x24)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$267, DW_AT_name("quot")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x43)
	.dwattr $C$DW$267, DW_AT_decl_column(0x1c)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$268, DW_AT_name("rem")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x43)
	.dwattr $C$DW$268, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x10)
$C$DW$T$90	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$90, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$90, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$90, DW_AT_decl_column(0x29)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x24)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$269, DW_AT_name("area")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x69)
	.dwattr $C$DW$269, DW_AT_decl_column(0x0d)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$270, DW_AT_name("xsum")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$270, DW_AT_decl_column(0x0d)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$271, DW_AT_name("ysum")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$271, DW_AT_decl_column(0x0d)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$272, DW_AT_name("xmin")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$272, DW_AT_decl_column(0x0d)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$273, DW_AT_name("ymin")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$273, DW_AT_decl_column(0x0d)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$274, DW_AT_name("xmax")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$274, DW_AT_decl_column(0x0d)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$275, DW_AT_name("ymax")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x70)
	.dwattr $C$DW$275, DW_AT_decl_column(0x0d)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$276, DW_AT_name("seedx")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x72)
	.dwattr $C$DW$276, DW_AT_decl_column(0x0d)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$277, DW_AT_name("seedy")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x73)
	.dwattr $C$DW$277, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x10)
$C$DW$T$91	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$91, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$91, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$91, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$91, DW_AT_decl_column(0x03)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x10)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$278, DW_AT_name("daylight")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x52)
	.dwattr $C$DW$278, DW_AT_decl_column(0x0b)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$279, DW_AT_name("timezone")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x53)
	.dwattr $C$DW$279, DW_AT_decl_column(0x0b)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$280, DW_AT_name("tzname")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x54)
	.dwattr $C$DW$280, DW_AT_decl_column(0x0b)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$281, DW_AT_name("dstname")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x55)
	.dwattr $C$DW$281, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x01)
$C$DW$T$92	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$92, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$92, DW_AT_decl_column(0x03)

$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x14)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$282, DW_AT_name("width")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0xaa)
	.dwattr $C$DW$282, DW_AT_decl_column(0x0d)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$283, DW_AT_name("height")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0xab)
	.dwattr $C$DW$283, DW_AT_decl_column(0x0d)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$284, DW_AT_name("marginPixels")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("marginPixels")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0xac)
	.dwattr $C$DW$284, DW_AT_decl_column(0x0d)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$285, DW_AT_name("fastDifferenceThreshold")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("fastDifferenceThreshold")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0xae)
	.dwattr $C$DW$285, DW_AT_decl_column(0x0d)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$286, DW_AT_name("n_features_desired")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("n_features_desired")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$286, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0xa9)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x10)
$C$DW$T$93	.dwtag  DW_TAG_typedef, DW_AT_name("CORBParameters")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$93, DW_AT_decl_line(0xb3)
	.dwattr $C$DW$T$93, DW_AT_decl_column(0x02)

$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x5a008)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$287, DW_AT_name("octave")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0xb9)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0d)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$288, DW_AT_name("relative_patterns")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("relative_patterns")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0xbb)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0d)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$289, DW_AT_name("rotated_patterns")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("rotated_patterns")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c004]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0d)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$290, DW_AT_name("integralImageWidth")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("integralImageWidth")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a004]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0xbd)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("CORBPatterns")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0xbe)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x02)

$C$DW$T$46	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x400)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$291, DW_AT_name("orientation_horizontal_offsets")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("orientation_horizontal_offsets")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0xc4)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0d)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$292, DW_AT_name("orientation_vertical_offsets")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("orientation_vertical_offsets")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e0]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0xc5)
	.dwattr $C$DW$292, DW_AT_decl_column(0x0d)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$293, DW_AT_name("u_max")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("u_max")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c0]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0xc6)
	.dwattr $C$DW$293, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$46

	.dwattr $C$DW$T$46, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0xc3)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOrientationOffsets")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0xc7)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x02)

$C$DW$T$52	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x5a420)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$294, DW_AT_name("patterns")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("patterns")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0xcd)
	.dwattr $C$DW$294, DW_AT_decl_column(0x1c)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$295, DW_AT_name("offsets")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("offsets")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a008]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0xce)
	.dwattr $C$DW$295, DW_AT_decl_column(0x1c)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$296, DW_AT_name("image")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("image")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a408]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0xcf)
	.dwattr $C$DW$296, DW_AT_decl_column(0x1c)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$297, DW_AT_name("prefimage")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("prefimage")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a40c]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0xd0)
	.dwattr $C$DW$297, DW_AT_decl_column(0x1c)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$298, DW_AT_name("harrisImage")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("harrisImage")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a410]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0xd1)
	.dwattr $C$DW$298, DW_AT_decl_column(0x1c)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$299, DW_AT_name("integralImage")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("integralImage")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a414]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0xd2)
	.dwattr $C$DW$299, DW_AT_decl_column(0x1c)
$C$DW$300	.dwtag  DW_TAG_member
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$300, DW_AT_name("scratchBuffer")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("scratchBuffer")
	.dwattr $C$DW$300, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a418]
	.dwattr $C$DW$300, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$300, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0xd3)
	.dwattr $C$DW$300, DW_AT_decl_column(0x1c)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$301, DW_AT_name("orbPattern31")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("orbPattern31")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a41c]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0xd4)
	.dwattr $C$DW$301, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$52

	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0xcc)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x10)
$C$DW$T$94	.dwtag  DW_TAG_typedef, DW_AT_name("CORBInput")
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$94, DW_AT_decl_line(0xd5)
	.dwattr $C$DW$T$94, DW_AT_decl_column(0x02)

$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x38)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$302, DW_AT_name("x")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0xdc)
	.dwattr $C$DW$302, DW_AT_decl_column(0x0d)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$303, DW_AT_name("y")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0xde)
	.dwattr $C$DW$303, DW_AT_decl_column(0x0d)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$304, DW_AT_name("octave")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0xe0)
	.dwattr $C$DW$304, DW_AT_decl_column(0x0d)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$305, DW_AT_name("angle")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("angle")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0xe3)
	.dwattr $C$DW$305, DW_AT_decl_column(0x0e)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$306, DW_AT_name("fastResponse")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("fastResponse")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0xe4)
	.dwattr $C$DW$306, DW_AT_decl_column(0x0e)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$307, DW_AT_name("harrisResponse")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("harrisResponse")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0xe5)
	.dwattr $C$DW$307, DW_AT_decl_column(0x0e)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$308, DW_AT_name("descriptor")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("descriptor")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0xe6)
	.dwattr $C$DW$308, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$55

	.dwattr $C$DW$T$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0xdb)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x10)
$C$DW$T$56	.dwtag  DW_TAG_typedef, DW_AT_name("CORBFeature")
	.dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0xe7)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x02)
$C$DW$T$57	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$T$57, DW_AT_address_class(0x20)

$C$DW$T$58	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x08)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$309, DW_AT_name("features")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("features")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0xed)
	.dwattr $C$DW$309, DW_AT_decl_column(0x12)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$310, DW_AT_name("n_features")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("n_features")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0xee)
	.dwattr $C$DW$310, DW_AT_decl_column(0x12)
	.dwendtag $C$DW$T$58

	.dwattr $C$DW$T$58, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$58, DW_AT_decl_line(0xec)
	.dwattr $C$DW$T$58, DW_AT_decl_column(0x10)
$C$DW$T$95	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOutput")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$95, DW_AT_decl_line(0xef)
	.dwattr $C$DW$T$95, DW_AT_decl_column(0x02)

$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x20)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$311, DW_AT_name("val")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("val")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x25)
	.dwattr $C$DW$311, DW_AT_decl_column(0x0c)
	.dwendtag $C$DW$T$61

	.dwattr $C$DW$T$61, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$61, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$61, DW_AT_decl_column(0x10)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("RotationMatrix")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x02)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$97	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$97, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$97, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$124	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$124, DW_AT_address_class(0x20)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x1d)
$C$DW$T$51	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$51, DW_AT_address_class(0x20)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$29	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$29, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$29, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$67	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$22)

$C$DW$T$54	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x20)
$C$DW$312	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$312, DW_AT_upper_bound(0x1f)
	.dwendtag $C$DW$T$54

$C$DW$T$138	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$19)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$140	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$140, DW_AT_address_class(0x20)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1d)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$69	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$24)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$142	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$142, DW_AT_address_class(0x20)
$C$DW$T$20	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x1c)
$C$DW$T$21	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$21, DW_AT_address_class(0x20)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x16)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x0d)
$C$DW$T$34	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x1d)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x11)

$C$DW$T$39	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x2000)
$C$DW$313	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$313, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$40, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x3c000)
$C$DW$314	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$314, DW_AT_upper_bound(0x1d)
$C$DW$315	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$315, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x1000)
$C$DW$316	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$316, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x1e000)
$C$DW$317	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$317, DW_AT_upper_bound(0x1d)
$C$DW$318	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$318, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$42


$C$DW$T$44	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x1e0)
$C$DW$319	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$319, DW_AT_upper_bound(0x77)
	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x40)
$C$DW$320	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$320, DW_AT_upper_bound(0x0f)
	.dwendtag $C$DW$T$45


$C$DW$T$62	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$62, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$62, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x10)
$C$DW$321	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$321, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$62

$C$DW$T$120	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$120, DW_AT_address_class(0x20)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x17)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x17)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x17)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x17)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x17)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x16)
$C$DW$T$98	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$98, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$98, DW_AT_decl_column(0x19)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x16)
$C$DW$T$25	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$25, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x1c)
$C$DW$T$49	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$49, DW_AT_address_class(0x20)
$C$DW$T$68	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$68, DW_AT_type(*$C$DW$T$49)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x16)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x16)
$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x16)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x16)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x21)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x17)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x20)
$C$DW$T$178	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$T$178, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$178, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$178, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$178, DW_AT_decl_column(0x16)
$C$DW$T$179	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$T$179, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$179, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$179, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$179, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$181	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$181, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$181, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$181, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$181, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$181, DW_AT_decl_column(0x21)
$C$DW$T$182	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$182, DW_AT_type(*$C$DW$T$181)
	.dwattr $C$DW$T$182, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$182, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$182, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$182, DW_AT_decl_column(0x17)
$C$DW$T$183	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$183, DW_AT_type(*$C$DW$T$181)
	.dwattr $C$DW$T$183, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$183, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$183, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$183, DW_AT_decl_column(0x17)
$C$DW$T$184	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$184, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$184, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$184, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$186	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$186, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$186, DW_AT_address_class(0x20)
$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x20)

$C$DW$T$188	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$188, DW_AT_byte_size(0x10)
$C$DW$322	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$322, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$188

$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x16)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x16)
$C$DW$T$191	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$191, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$191, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$191, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$191, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$191, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x0f)
$C$DW$T$192	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$192, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$192, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$192, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$192, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$193	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$193, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$193, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$193, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeOrientation\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$193, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$193, DW_AT_decl_column(0x10)

$C$DW$T$59	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$59, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x10)
$C$DW$323	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$323, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$60, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x20)
$C$DW$324	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$324, DW_AT_upper_bound(0x01)
$C$DW$325	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$325, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$60

$C$DW$T$194	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$194, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$194, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$26	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$26, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$26, DW_AT_name("signed char")
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x01)
$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)
$C$DW$T$195	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$195, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$195, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$195, DW_AT_decl_column(0x12)

$C$DW$T$36	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x04)
$C$DW$326	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$326, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$36

$C$DW$T$145	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$26)
$C$DW$T$146	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_address_class(0x20)

$C$DW$T$196	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$196, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$196, DW_AT_language(DW_LANG_C)
$C$DW$327	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$196


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x10)
$C$DW$328	.dwtag  DW_TAG_member
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$328, DW_AT_name("_v")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$328, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0x44)
	.dwattr $C$DW$328, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$63

	.dwattr $C$DW$T$63, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$63, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$63, DW_AT_decl_column(0x01)
$C$DW$T$197	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$T$197, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$197, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$197, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$197, DW_AT_decl_column(0x01)
$C$DW$T$198	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$T$197)
	.dwattr $C$DW$T$198, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$198, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$198, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$198, DW_AT_decl_column(0x13)

$C$DW$T$64	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$64, DW_AT_name("tm")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x24)
$C$DW$329	.dwtag  DW_TAG_member
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$329, DW_AT_name("tm_sec")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$329, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0x41)
	.dwattr $C$DW$329, DW_AT_decl_column(0x09)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$330, DW_AT_name("tm_min")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x42)
	.dwattr $C$DW$330, DW_AT_decl_column(0x09)
$C$DW$331	.dwtag  DW_TAG_member
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$331, DW_AT_name("tm_hour")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$331, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$331, DW_AT_decl_line(0x43)
	.dwattr $C$DW$331, DW_AT_decl_column(0x09)
$C$DW$332	.dwtag  DW_TAG_member
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$332, DW_AT_name("tm_mday")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$332, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$332, DW_AT_decl_line(0x44)
	.dwattr $C$DW$332, DW_AT_decl_column(0x09)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$333, DW_AT_name("tm_mon")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x45)
	.dwattr $C$DW$333, DW_AT_decl_column(0x09)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$334, DW_AT_name("tm_year")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x46)
	.dwattr $C$DW$334, DW_AT_decl_column(0x09)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$335, DW_AT_name("tm_wday")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x47)
	.dwattr $C$DW$335, DW_AT_decl_column(0x09)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$336, DW_AT_name("tm_yday")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x48)
	.dwattr $C$DW$336, DW_AT_decl_column(0x09)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$337, DW_AT_name("tm_isdst")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x49)
	.dwattr $C$DW$337, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$64

	.dwattr $C$DW$T$64, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$64, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$64, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

